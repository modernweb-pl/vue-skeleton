#!/usr/bin/env node

const pkg = require('../package');
const { spawn } = require('child_process');

const argv = process.argv.slice(2);
const cmds = ['build', 'push', 'run'];
const cmd = argv[0];

if (!cmds.includes(cmd)) {
  console.error(`Unknown command, use one of ${JSON.stringify(cmds)}`);
  process.exit(1);
}

const image = `${pkg.docker.registry}/${pkg.name}:${pkg.version}`;
const port = process.env.PORT || 8000;

let spawnArgs = [cmd];
switch (cmd) {
  case 'build':
    spawnArgs.push('-t', image, '.');
    break;
  case 'push':
    spawnArgs.push(image);
    break;
  case 'run':
    spawnArgs.push('--rm', `--name=${pkg.name}`, '-p', `${port}:80`, image);
    break;
}

console.log(`docker ${spawnArgs.join(' ')}`);

const docker = spawn('docker', spawnArgs);

docker.stdout.on('data', (data) => console.log(data.toString()));
docker.stderr.on('data', (data) => console.log(data.toString()));
docker.on('exit', (code) => process.exit(code));
